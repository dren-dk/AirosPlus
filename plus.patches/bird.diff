diff -ru post-svn.SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.conf SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.conf
--- post-svn.SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.conf	2012-08-17 17:00:22.540222016 +0200
+++ SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.conf	2012-08-17 17:14:01.239264340 +0200
@@ -1,121 +1,73 @@
-
-# THIS CONFIG FILE IS NOT A COMPLETE DOCUMENTATION
-# PLEASE LOOK IN THE BIRD DOCUMENTATION FOR MORE INFO
-
-# However, most of options used here are just for example
-# and will be removed in real-life configs.
+# See: http://bird.network.cz/ for documentation
+# On AirOS put the file in /etc/persistent and run saveconfig
 
 log syslog all;
-
-# Override router ID
-#router id 192.168.0.1;
-
-# Turn on global debugging of all protocols
 #debug protocols all;
 
+protocol direct {
+       interface "*";
+}
 
-# Define a route filter...
-# filter test_filter {
-#	if net ~ 10.0.0.0/16 then accept;
-#	else reject;
-# }
-
-# The direct protocol automatically generates device routes to all network
-# interfaces. Can exist in as many instances as you wish if you want to
-# populate multiple routing tables with device routes. Because device routes
-# are handled by Linux kernel, this protocol is  usually not needed.
-# protocol direct {
-#	interface "*";	# Restrict network interfaces it works with
-# }
-
-# This pseudo-protocol performs synchronization between BIRD's routing
-# tables and the kernel. You can run multiple instances of the kernel
-# protocol and synchronize different kernel tables with different BIRD tables.
 protocol kernel {
-#	learn;			# Learn all alien routes from the kernel
-#	persist;		# Don't remove routes on bird shutdown
-	scan time 20;		# Scan kernel routing table every 20 seconds
-#	import none;		# Default is import all
-#	export all;		# Default is export none
+#  learn;
+  persist;
+  scan time 2;
+#  import none;
+#  export all;
 }
 
-# This pseudo-protocol watches all interface up/down events.
 protocol device {
-	scan time 10;		# Scan interfaces every 10 seconds
+  scan time 1;
 }
 
-# Static routes (again, there can be multiple instances, so that you
-# can disable/enable various groups of static routes on the fly).
 protocol static {
-#	export all;		# Default is export none
-#	route 0.0.0.0/0 via 62.168.0.13;
-#	route 10.0.0.0/8 reject;
-#	route 192.168.0.0/16 reject;
+  export all;
+
+  route 10.102.16.0/20  via 10.102.0.1;
+  route 10.102.32.0/20 via 10.102.0.2;
+  route 10.102.48.0/20 via 10.102.0.3;
+  route 10.102.64.0/20 via 10.102.0.4;
+  route 10.102.80.0/20 via 10.102.0.5;
+
+  route 10.104.0.0/16  via 10.102.0.1;
+
+  route 10.105.0.0/16  via 10.102.0.2;
 }
 
+protocol ospf {
+  import all;
+  export all;
+
+  area 0 {
+
+    networks {
+      10.100.0.0/16;
+      10.102.0.0/24;
+      10.103.0.0/24;
+      10.104.0.0/24;
+      10.105.0.0/24;
+    };
+
+    interface "eth0" {
+      cost 10;
+      hello 1;
+      retransmit 2;
+      wait 5;
+      dead 10;
+      password "love";
+      authentication simple;
+    };
+
+    interface "ath0" {
+      cost 50;
+      hello 1;
+      retransmit 2;
+      wait 5;
+      dead 10;
+      password "love";
+      authentication simple;
+    };
+
+  };
+}
 
-#protocol rip {
-#	disabled;
-#	import all;
-#	export all;
-#	export filter test_filter;
-
-#	port 1520;
-#	period 7;
-#	infinity 16;
-#	garbage time 60;
-#	interface "*" { mode broadcast; };
-#	honor neighbor;
-#	honor always;
-#	honor never;
-#	authentication none;
-#}
-
-
-#protocol ospf {
-#	disabled;
-#	import all;
-#	export all;
-#	export where source = RTS_STATIC;
-
-#	area 0 {
-#		interface "eth*" {
-#			cost 10;
-#			hello 3;
-#			retransmit 2;
-#			wait 5;
-#			dead 20;
-#			type broadcast;
-#			authentication simple;
-#			password "pass";
-#		};
-#	};
-#}
-
-
-#protocol bgp {
-#	disabled;
-#	import all;
-#	export all;
-#	export where source = RTS_STATIC;
-
-#	local as 65000;
-#	neighbor 192.168.1.1 as 65001;
-#	multihop 20 via 192.168.2.1;
-
-#	hold time 240;
-#	startup hold time 240;
-#	connect retry time 120;
-#	keepalive time 80;	# defaults to hold time / 3
-#	start delay time 5;	# How long do we wait before initial connect
-#	error wait time 60, 300;# Minimum and maximum time we wait after an error (when consecutive
-#				# errors occur, we increase the delay exponentially ...
-#	error forget time 300;	# ... until this timeout expires)
-#	disable after error;	# Disable the protocol automatically when an error occurs
-#	next hop self;		# Disable next hop processing and always advertise our local address as nexthop
-#	source address 62.168.0.14;	# What local address we use for the TCP connection
-#	password "secret"	# Password used for MD5 authentication
-#	rr client;		# I am a route reflector and the neighor is my client
-#	rr cluster id 1.0.0.1	# Use this value for cluster id instead of my router id 
-#	};
-#}
Only in SDK.UBNT.v5.5/openwrt/package/bird/files: bird4.conf~
diff -ru post-svn.SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.init SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.init
--- post-svn.SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.init	2012-08-17 17:00:22.540222016 +0200
+++ SDK.UBNT.v5.5/openwrt/package/bird/files/bird4.init	2012-08-17 17:15:20.359557017 +0200
@@ -1,21 +1,35 @@
-#!/bin/sh /etc/rc.common
-# Copyright (C) 2010-2011 OpenWrt.org
+#!/bin/sh
 
-START=50
+CONF=/etc/persistent/bird4.conf
+MODE="$1"
 
-SERVICE_DAEMONIZE=1
-SERVICE_WRITE_PID=1
+if [ "${MODE}" = "stop" ]
+then
+    killall bird4
+    exit 0
+fi
 
-start() {
-	service_start /usr/sbin/bird4 -d
-#	( SERVICE_MATCH_NAME=1 service_start /usr/sbin/bird4loop )
-}
-
-stop() {
-#	( SERVICE_MATCH_NAME=1 service_stop /usr/sbin/bird4loop )
-	service_stop /usr/sbin/bird4
-}
-
-reload() {
-	service_reload /usr/sbin/bird4
-}
+if [ -f "${CONF}" ]
+then
+   
+   if [ "${MODE}" = "test" ]
+   then
+       daemon="-d"
+   else
+       echo "Starting BIRD using ${CONF} as a daemon, use test parameter to run in foreground"
+       daemon=""
+   fi
+
+   /usr/bin/bird4 ${daemon}
+
+   if [ "${MODE}" = "test" ]
+   then
+       echo "BIRD has exited."
+   else
+       echo "BIRD has been started."
+   fi
+
+else 
+   echo "BIRD is not enabled"
+   exit 0
+fi
Only in SDK.UBNT.v5.5/openwrt/package/bird/files: bird4.init~
diff -ru post-svn.SDK.UBNT.v5.5/openwrt/package/bird/Makefile SDK.UBNT.v5.5/openwrt/package/bird/Makefile
--- post-svn.SDK.UBNT.v5.5/openwrt/package/bird/Makefile	2012-08-17 17:00:22.540222016 +0200
+++ SDK.UBNT.v5.5/openwrt/package/bird/Makefile	2012-08-17 17:19:17.528433807 +0200
@@ -115,7 +115,7 @@
 $(call Package/bird/Default/description3)
 endef
 
-CONFIGURE_ARGS += --with-linux-headers="$(LINUX_DIR)"
+CONFIGURE_ARGS += --with-linux-headers="$(LINUX_DIR)" --sysconfdir=/etc/persistent
 
 define Build/Template
 
@@ -134,8 +134,8 @@
 	$(INSTALL_BIN)  ./files/bird$(2)loop $$(1)/usr/sbin/
 	$(INSTALL_DIR)  $$(1)/etc
 	$(INSTALL_DATA) ./files/bird$(2).conf $$(1)/etc/
-	$(INSTALL_DIR)  $$(1)/etc/init.d
-	$(INSTALL_BIN)  ./files/bird$(2).init $$(1)/etc/init.d/bird$(2)
+	$(INSTALL_DIR)  $$(1)/usr/bin
+	$(INSTALL_BIN)  ./files/bird$(2).init $$(1)/usr/bin/bird$(2).init
 
 endef
 
Only in SDK.UBNT.v5.5/openwrt/package/bird: Makefile~
